{"version":3,"sources":["components/ArtistTable.js","components/App.js","index.js"],"names":["ArtistTable","state","posts","isLoading","error","axios","then","response","artists","data","artist","albums","rest","album","push","setState","catch","this","getArtistsInfo","columns","Header","accessor","defaultPageSize","pageSizeOptions","Component","App","ReactDOM","render","document","getElementById"],"mappings":"mSA2JeA,G,iNA5IbC,MAAQ,CACNC,MAAO,GACPC,WAAW,EACXC,MAAO,M,gFAKS,IAAD,OAEfC,IAAM,iCAGHC,MAAK,SAAAC,GAEJ,IAAMC,EAAUD,EAASE,KAGnBP,EAAQ,GALE,uBAMhB,YAAqBM,EAArB,+CAA8B,CAAC,IAApBE,EAAmB,QAEpBC,EAAoBD,EAApBC,OAAWC,EAFS,YAEAF,EAFA,mCAI5B,YAAoBC,EAApB,+CAA4B,CAAC,IAAlBE,EAAiB,QAE1BX,EAAMY,KAAN,eAAgBF,EAAhB,GAAyBC,KANC,oFANd,kFAiBhB,EAAKE,SAAS,CAEZb,QAEAC,WAAW,OAKda,OAAM,SAAAZ,GAAK,OAAI,EAAKW,SAAS,CAAEX,QAAOD,WAAW,S,0CAOpDc,KAAKC,mB,+BAIG,IAAD,EACsBD,KAAKhB,MAA1BE,EADD,EACCA,UAAWD,EADZ,EACYA,MA4DrB,OAEE,6BACE,kDACEC,EAaE,4CAXF,kBAAC,IAAD,CAEEM,KAAMP,EAGNiB,QArEU,CAAC,CAEfC,OAAQ,cAERD,QAAS,CACP,CAEEC,OAAQ,YAGRC,SAAU,MAGZ,CAEED,OAAQ,cAGRC,SAAU,QAGZ,CAEED,OAAQ,SAGRC,SAAU,YAKhB,CAEED,OAAQ,SAERD,QAAS,CACP,CAEEC,OAAQ,QAGRC,SAAU,SAGZ,CAEED,OAAQ,mBAGRC,SAAU,cAsBVC,gBAAiB,EACjBC,gBAAiB,CAAC,EAAG,EAAG,U,GAhIRC,cCDXC,MARf,WACE,OAEI,kBAAC,EAAD,OCINC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.17305645.chunk.js","sourcesContent":["// tag::react-library[]\r\nimport React, { Component } from 'react';\r\n// end::react-library[]\r\n// tag::axios-library[]\r\nimport axios from 'axios';\r\n// end::axios-library[]\r\n// tag::react-table[]\r\nimport ReactTable from 'react-table-6';\r\nimport 'react-table-6/react-table.css';\r\n// end::react-table[]\r\n\r\n// tag::class[]\r\nclass ArtistTable extends Component {\r\n// end::class[]\r\n  // tag::state-object[]\r\n  state = {\r\n    posts: [],\r\n    isLoading: true,\r\n    error: null,\r\n  };\r\n  // end::state-object[]\r\n\r\n  // tag::get-posts[]\r\n  getArtistsInfo() {\r\n    // tag::axios[]\r\n    axios('http://localhost:9080/artists')\r\n    // end::axios[]\r\n      // tag::then-method[]\r\n      .then(response => {\r\n        // tag::response-data[]\r\n        const artists = response.data;\r\n        // end::response-data[]\r\n        // tag::convert-data[]\r\n        const posts = [];\r\n        for (const artist of artists) {\r\n          // tag::spread-one[]\r\n          const { albums, ...rest } = artist;\r\n          // end::spread-one[]\r\n          for (const album of albums) {\r\n            // tag::spread-two[]\r\n            posts.push({ ...rest, ...album });\r\n            // end::spread-two[]\r\n          }\r\n        };\r\n        // end::convert-data[]\r\n        this.setState({\r\n          // tag::data[]\r\n          posts,\r\n          // end::data[]\r\n          isLoading: false\r\n        });\r\n      // end::then-method[]\r\n      })\r\n      // tag::error-handling[]\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n      // end::error-handling[]\r\n  }\r\n  // end::get-posts[]\r\n\r\n  // tag::mount-posts[]\r\n  componentDidMount() {\r\n    this.getArtistsInfo();\r\n  }\r\n  // end::mount-posts[]\r\n  // tag::render-posts[]\r\n  render() {\r\n    const { isLoading, posts } = this.state;\r\n    // tag::table-info[]\r\n    const columns = [{\r\n      // tag::header-artist[]\r\n      Header: 'Artist Info',\r\n      // end::header-artist[]\r\n      columns: [\r\n        {\r\n          // tag::header-ID[]\r\n          Header: 'Artist ID',\r\n          // end::header-ID[]\r\n          // tag::accessor-ID[]\r\n          accessor: 'id'\r\n          // end::accessor-ID[]\r\n        },\r\n        {\r\n          // tag::header-name[]\r\n          Header: 'Artist Name',\r\n          // end::header-name[]\r\n          // tag::accessor-name[]\r\n          accessor: 'name'\r\n          // end::accessor-name[]\r\n        },\r\n        {\r\n          // tag::header-genres[]\r\n          Header: 'Genres',\r\n          // end::header-genres[]\r\n          // tag::accessor-genres[]\r\n          accessor: 'genres',\r\n          // end::accessor-genres[]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      // tag::header-albums[]\r\n      Header: 'Albums',\r\n      // end::header-albums[]\r\n      columns: [\r\n        {\r\n          // tag::header-title[]\r\n          Header: 'Title',\r\n          // end::header-title[]\r\n          // tag::accessor-title[]\r\n          accessor: 'title',\r\n          // end::accessor-title[]\r\n        },\r\n        {\r\n          // tag::header-tracks[]\r\n          Header: 'Number of Tracks',\r\n          // end::header-tracks[]\r\n          // tag::accessor-tracks[]\r\n          accessor: 'ntracks',\r\n          // end::accessor-tracks[]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n  // end::table-info[]\r\n\r\n  // tag::return-table[]\r\n  return (\r\n    // tag::react-fragment[]\r\n    <div>\r\n      <h2>Artist Web Service</h2>\r\n      {!isLoading ? (\r\n        // tag::table[]\r\n        <ReactTable\r\n          // tag::posts[]\r\n          data={posts}\r\n          // end::posts[]\r\n          // tag::columns[]\r\n          columns={columns}\r\n          // end::columns[]\r\n          defaultPageSize={4}\r\n          pageSizeOptions={[4, 5, 6]}\r\n        />) : (\r\n        // end::table[]\r\n          <p>Loading .....</p>\r\n        )}\r\n    </div>\r\n    // end::react-fragment[]\r\n    );\r\n    // end::return-table[]\r\n  }\r\n  // end::render-posts[]\r\n}\r\n// end::element[]\r\n\r\n// tag::export-artisttable[]\r\nexport default ArtistTable;\r\n// end::export-artisttable[]","import React from 'react';\nimport ArtistTable from './ArtistTable';\n\nfunction App() {\n  return (\n    // tag::react-component[]\n      <ArtistTable/>\n    // end::react-component[]\n  );\n}\n\nexport default App;","// tag::import-react[]\nimport React from 'react';\n// end::import-react[]\n// tag::react-dom[]\nimport ReactDOM from 'react-dom';\n// end::react-dom[]\nimport './styles/index.css';\nimport App from './components/App';\n\n// tag::dom-render[]\nReactDOM.render(<App />, document.getElementById('root'));\n// end::dom-render[]\n"],"sourceRoot":""}